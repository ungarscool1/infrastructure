apiVersion: batch/v1
kind: Job
metadata:
  name: bouncers-job
  namespace: kube-system
spec:
  template:
    spec:
      serviceAccountName: helm-traefik
      containers:
        - name: create-token
          image: bitnami/kubectl:latest
          command:
            - /bin/sh
            - -c
            - |
              # check if a secret already exists
              if kubectl -n kube-system get secret crowdsec-lapi-secrets; then
                echo "Secret already exists, skipping"
                exit 0
              fi
              kubectl exec -it $(kubectl get pods -n {{.Release.Namespace}} -l k8s-app=waf,type=lapi -o jsonpath='{.items[0].metadata.name}') -n {{.Release.Namespace}} -- /bin/sh -c "cscli bouncers add traefik" | awk 'NR==3 {print $1}' > /tmp/csLapiSecret
              kubectl -n kube-system create secret generic crowdsec-lapi-secrets --from-file=csLapiSecret=/tmp/csLapiSecret --dry-run=client -o yaml | kubectl apply -f -
              source_uid=$(kubectl get secret crowdsec-lapi-secrets -n {{.Release.Namespace}} -o jsonpath='{.metadata.uid}')
              #kubectl -n kube-system patch secret crowdsec-lapi-secrets -p '{"metadata":{"ownerReferences":[{"apiVersion":"v1","kind":"secret","name":"crowdsec-lapi-secrets","uid":"'${source_uid}'", "blockOwnerDeletion": true}]}}'
      initContainers:
        - name: wait-for-deployment
          image: bitnami/kubectl:latest
          command:
            - "/bin/sh"
            - "-c"
            - "until kubectl wait --for=condition=available deployment/{{.Release.Name}}-lapi -n {{.Release.Namespace}}; do sleep 1; done"
      restartPolicy: Never