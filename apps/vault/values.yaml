init:
  key_shares: 6
  key_threshold: 3
  engine:
    name: applications
    max_versions: 5
    type: kv
    version: 2

vault:
  global:
    enabled: true
    serverTelemetry:
      prometheusOperator: false
  injector:
    enabled: false
  server:
    enabled: true
    image:
      repository: "hashicorp/vault"
      tag: "1.17.6"
      pullPolicy: IfNotPresent
    updateStrategyType: "OnDelete"
    logLevel: "info"
    logFormat: "standard"
    resources:
      requests:
        memory: 256Mi
        cpu: 250m
      limits:
        memory: 256Mi
        cpu: 250m
    ingress:
      enabled: true
      annotations:
        traefik.ingress.kubernetes.io/router.middlewares: waf-ip-whitelist@kubernetescrd,waf-redirect2https@kubernetescrd
      pathType: Prefix
      activeService: true
      hosts:
        - host: "vault.apps.legodard.fr"
          paths: []
    authDelegator:
      enabled: true
    extraInitContainers: null
    extraContainers: null
    shareProcessNamespace: false
    extraArgs: ""
    extraPorts: null
    readinessProbe:
      enabled: true
      port: 8200
      failureThreshold: 2
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 3
    livenessProbe:
      enabled: false
    terminationGracePeriodSeconds: 10
    preStopSleepSeconds: 5
    volumes: null
    volumeMounts: null
    affinity: |
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: {{ template "vault.name" . }}
                app.kubernetes.io/instance: "{{ .Release.Name }}"
                component: server
            topologyKey: kubernetes.io/hostname
    nodeSelector: {}
    networkPolicy:
      enabled: false
      egress: []
      # egress:
      # - to:
      #   - ipBlock:
      #       cidr: 10.0.0.0/24
      #   ports:
      #   - protocol: TCP
      #     port: 443
      ingress:
        - from:
          - namespaceSelector: {}
          ports:
          - port: 8200
            protocol: TCP
          - port: 8201
            protocol: TCP
    priorityClassName: ""
    extraLabels: {}
    annotations: {}
    configAnnotation: false
    service:
      enabled: true
      active:
        enabled: true
        annotations: {}
      standby:
        enabled: true
        annotations: {}
      instanceSelector:
        enabled: true
      ipFamilies: []
      publishNotReadyAddresses: true
      externalTrafficPolicy: Cluster
      port: 8200
      targetPort: 8200
      annotations: {}
    dataStorage:
      enabled: true
      size: 1Gi
      mountPath: "/vault/data"
      storageClass: null
      accessMode: ReadWriteOnce
      annotations: {}
      labels: {}
    persistentVolumeClaimRetentionPolicy: {}
    auditStorage:
      enabled: false
      # Size of the PVC created
      size: 2Gi
      mountPath: "/vault/audit"
      storageClass: null
      accessMode: ReadWriteOnce
      annotations: {}
      labels: {}
    dev:
      enabled: false
    standalone:
      enabled: "-"
      config: |
        ui = true
  
        listener "tcp" {
          tls_disable = 1
          address = "[::]:8200"
          cluster_address = "[::]:8201"
        }
        storage "file" {
          path = "/vault/data"
        }
    ha:
      enabled: false
    serviceAccount:
      create: true
      serviceDiscovery:
        enabled: true
    statefulSet:
      securityContext:
        pod: {}
        container: {}
    hostNetwork: false
  # Vault UI
  ui:
    enabled: false
  csi:
    enabled: false
  serverTelemetry:
    serviceMonitor:
      enabled: false
    prometheusRules:
        enabled: false
